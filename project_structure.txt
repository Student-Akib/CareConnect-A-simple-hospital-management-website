H0 PROJECT STRUCTURE
====================

h0/
├── README.md
├── cursornotes.txt
├── project_structure.txt (this file)
├── database/
├── public/
│   ├── branches.html
│   ├── css/
│   │   └── style.css
│   ├── dashboard.html
│   ├── images/
│   │   ├── branches-icon.png
│   │   ├── doctor-icon.png
│   │   ├── hero-background.jpg
│   │   └── patient-icon.png
│   ├── index.html
│   ├── js/
│   │   ├── branches.js
│   │   ├── common/
│   │   │   ├── auth.js
│   │   │   └── nav.js
│   │   ├── dashboard.js
│   │   ├── homepage.js
│   │   ├── login.js
│   │   ├── register.js
│   │   └── script.js
│   ├── login.html
│   └── register.html
└── server/
    ├── README.md
    ├── package.json
    ├── package-lock.json
    ├── server.js
    ├── db.js
    ├── .gitignore
    ├── controllers/
    │   ├── authController.js
    │   ├── userController.js
    │   └── branchesController.js
    └── routes/
        ├── authRoutes.js
        ├── userRoutes.js
        └── branchesRoutes.js

TOTAL FILES: 25 files + directories

SERVER FOLDER DETAILS:
=====================

server/
├── README.md (1022B) - Server setup documentation
├── package.json (508B) - Dependencies and scripts
├── package-lock.json (52KB) - Locked dependency versions
├── server.js (1.3KB) - Main server entry point
├── db.js (389B) - Centralized database connection
├── .gitignore (5B) - Git ignore rules
├── controllers/ (3 files)
│   ├── authController.js (2.5KB) - Authentication logic
│   ├── userController.js (3.8KB) - User management
│   └── branchesController.js (355B) - Branch data
└── routes/ (3 files)
    ├── authRoutes.js (280B) - Auth endpoints
    ├── userRoutes.js (928B) - User endpoints
    └── branchesRoutes.js (249B) - Branch endpoints

PUBLIC FOLDER DETAILS:
=====================

public/ (Frontend files)
├── branches.html - Branch listing page
├── css/
│   └── style.css - Main stylesheet
├── dashboard.html - User dashboard
├── images/ (4 image files)
│   ├── branches-icon.png
│   ├── doctor-icon.png
│   ├── hero-background.jpg
│   └── patient-icon.png
├── index.html - Homepage
├── js/ (7 JavaScript files)
│   ├── branches.js - Branch functionality
│   ├── common/
│   │   ├── auth.js - Authentication utilities
│   │   └── nav.js - Navigation utilities
│   ├── dashboard.js - Dashboard functionality
│   ├── homepage.js - Homepage functionality
│   ├── login.js - Login functionality
│   ├── register.js - Registration functionality
│   └── script.js - Main script
├── login.html - Login page
└── register.html - Registration page

API ENDPOINTS:
==============

Authentication (/api/auth):
- POST /login - User login
- POST /register - User registration

Users (/api/users) - All protected:
- GET / - Get all users (admin only)
- GET /me - Get current user profile
- GET /dashboard - Get user dashboard
- GET /notifications - Get user notifications
- PUT /me - Update user profile
- DELETE /me - Delete user account

Branches (/api/branches):
- GET / - Get all branches

DEPENDENCIES:
=============

Server Dependencies:
- express: ^5.1.0 (Web framework)
- cors: ^2.8.5 (Cross-origin resource sharing)
- dotenv: ^17.2.0 (Environment variables)
- pg: ^8.16.3 (PostgreSQL client)
- bcrypt: ^6.0.0 (Password hashing)
- jsonwebtoken: ^9.0.2 (JWT tokens)

Dev Dependencies:
- nodemon: ^3.1.10 (Auto-restart development server)

ENVIRONMENT VARIABLES:
=====================

Required (.env file):
- DATABASE_URL: PostgreSQL connection string
- JWT_SECRET: Secret key for JWT tokens
- PORT: Server port (default: 3000)

SCRIPTS:
========

- npm run dev: Start with nodemon (auto-restart)
- npm start: Start server normally
- npm test: Run tests (not implemented)

NOTES:
======
- Server uses centralized database connection (db.js)
- All user routes are protected with JWT authentication
- Consistent error responses using 'error' field
- Clean separation of concerns between controllers and routes
- Frontend and backend are properly separated
- Database uses connection pooling for efficiency 